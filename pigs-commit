#!/bin/dash

# <--------- Start-  Helper function to be imported ------------------------------------>
pigs_add() {
  # Adds a file to .pig/index
  for file in "$@"
  do
    if ! [ -e "$file" ]; then
      if [ "$(file_was_removed "${file}")" = "true" ]; then # check if it was removed just now
        rm ".pig/index/$file" 
        continue
      fi
      echo "pigs-add: error: can not open 'non_existent_file'"
      continue
    fi
    cp "$file" ".pig/index/$file"
  done
}
file_was_removed() {
  # Check in index if there was the file
  if ! [ -e ".pig/index/$1" ]; then
    # The file was never there
    echo "false"; return 
  fi
  # The file was removed
  echo "true"; return 
}
check_pig_repo_exist() {
  if ! [ -d ".pig" ]; then
    echo "pigs-commit: error: pigs repository directory .pig not found"
    exit 1
  fi
}
# <--------- End-  Helper function to be imported ------------------------------------>

# <---- ---- ----Start-  Main Functions ---- ---- ---- ---->
# Check if user inputs the correct format
check_correct_input() {
  if ! [ "$#" -lt 4 ]; then
    echo "usage: pigs-commit [-a] -m commit-message"
    exit 1
  fi
  # Checks the -a -m options
  if [ "$1" = "-m" ]; then 
    option_m="true"
    option_a_m="false"
  elif [ "$1" = "-a" -a "$2" = "-m" ]; then
    option_m="false"
    option_a_m="true"
  else 
    option_m="false"
    option_a_m="false"
  fi
  if [ "$option_m" = true -a "$option_a_m" = "false" ]; then
    if ! [ "$#" -lt 3  ]; then
      echo "usage: pigs-commit [-a] -m commit-message"
      exit 1
    fi
  fi
  if ! [ "$option_m" = "true" -o "$option_a_m" = "true" ]; then
    echo "usage: pigs-commit [-a] -m commit-message"
    exit 1
  fi
}
get_input_options() {
  if [ "$1" = "-m" ]; then
    echo "-m"
    return
  elif [ "$1" = "-a" ]; then
    echo "-a"
    return
  else
    echo "-a -m"
    return
  fi
}
# <---- ---- ----End-  Main Functions ---- ---- ---- ---->

# Main code 
check_pig_repo_exist
check_correct_input "$@"
input_options=$(get_input_options "$@")
commit_number=$(ls .pig/commit-log | wc -l)
if [ "$input_options" = "-m" ]; then
  commit_message="$2" 
else
  commit_message="$3"
fi
# Option : -a , add file already in index
if [ "$input_options" = "-a" ]; then
  for file in $(ls .pig/index); do
    if [ -e "$file" ]; then
      pigs_add "$file"
    fi
  done
fi

# nothing to commit if no change added
last_commit_number=$(($commit_number - 1))
will_commit=false #Decide if there is nothing to commit
# Checks if all the file is the same
if ! [ "$last_commit_number" -lt 0 ]; then
  for old_file in $(ls .pig/commit-files/${last_commit_number}); do
    # Check if old_file exist in the New directory
    if ! [ -e ".pig/index/${old_file}" ]; then
      # Check if files exit on both directory
      will_commit=true
      break
    fi
    # Check if the files are the same
    text_old_file=$(cat ".pig/commit-files/${last_commit_number}/${old_file}")
    text_curr_file=$(cat ".pig/index/${old_file}")
    if ! [ "$text_old_file" = "$text_curr_file" ]; then
      will_commit=true
      break
    fi
  done
fi
#Check if there is new file.
for new_file in $(ls .pig/index); do
  if ! [ -e ".pig/commit-files/${last_commit_number}/${new_file}" ] 2>/dev/null
  then
    will_commit=true
    break
  fi
done

if ! $will_commit; then
  echo "nothing to commit"
  exit 1
fi
# Create commit file that has commit message 
echo "$2" >> "commit_${commit_number}" 
# Move commit file to the pigs/commit-log
mv "commit_${commit_number}" "./.pig/commit-log"
# Create a place for copying
mkdir ".pig/commit-files/${commit_number}"


for file in $(ls .pig/index)
do
  # if file doesn't exist copy from directory
  if ! [ -e "$file" ]; then
    cp "$file" ".pig/commit-files/${commit_number}"
  else 
    cp ".pig/index/$file" ".pig/commit-files/${commit_number}"
  fi
done
echo "Committed as commit ${commit_number}" 


